
// <copyright file="SubString.cs" company="">
// Copyright (c) 2018 All Rights Reserved
// </copyright>
// <author></author>
// <date>7/16/2018 12:15:59 PM</date>
// <summary>Implements the SubString Plugin.</summary>
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
// </auto-generated>
namespace Defra.Lp.Workflows
{
    using System;
    using System.Activities;
    using Microsoft.Xrm.Sdk.Workflow;

    /// <summary>
    /// Returns a substring of the parameter passed in
    /// </summary>
    public sealed class Substring : WorkFlowActivityBase
    {

        protected override void Execute(CodeActivityContext executionContext)
        {
            var result = PerformSubstring(Text.Get<string>(executionContext), StartIndex.Get<int>(executionContext), Length.Get<int>(executionContext), LeftToRight.Get<bool>(executionContext));
            Result.Set(executionContext, result);
        }

        private static string PerformSubstring(string result, int start, int length, bool lefttoright)
        {
            if (length <= 0 || start < 0)
            {
                result = String.Empty;
            }
            else
            {
                if (!lefttoright)
                {
                    start = result.Length - length - start;
                }
                result = result.Substring(start, length);
            }
            return result;
        }

        [Input("Text")]
        [RequiredArgument]
        public InArgument<string> Text { get; set; }

        [Output("Result")]
        [RequiredArgument]
        public OutArgument<string> Result { get; set; }

        [Input("From Left To Right")]
        [RequiredArgument]
        [Default("True")]
        public InArgument<bool> LeftToRight { get; set; }

        [Input("Start Index")]
        [RequiredArgument]
        [Default("0")]
        public InArgument<int> StartIndex { get; set; }

        [Input("Length")]
        [RequiredArgument]
        [Default("3")]
        public InArgument<int> Length { get; set; }
    }

}
