{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "logicAppName": {
      "type": "string"
    },
    "location": {
      "type": "string"
    },
    "sharepointSiteName": {
      "type": "string"
    },
    "dynamicsSiteName": {
      "type": "string"
    },
    "sharepointConnectionName1": {
      "type": "string"
    },
    "sharepointConnectionDisplayName1": {
      "type": "string"
    },
    "dynamicsConnectionName1": {
      "type": "string"
    },
    "dynamicsConnectionDisplayName1": {
      "type": "string"
    },
    "Environment": {
      "type": "string"
    },
    "ServiceCode": {
      "type": "string"
    },
    "ServiceName": {
      "type": "string"
    },
    "ServiceType": {
      "type": "string"
    },
    "CreatedDate": {
      "type": "string"
    }
  },
  "variables": {
    "paths": {
          "listRecords": "[concat('/datasets/@{encodeURIComponent(encodeURIComponent(''',parameters('dynamicsSiteName'),'''))}/tables/@{encodeURIComponent(encodeURIComponent(''defra_applications''))}/items')]",
          "getFolderMetadata": "[concat('/datasets/@{encodeURIComponent(encodeURIComponent(''',parameters('sharepointSiteName'),'''))}/GetFolder')]",
          "deleteItem": "[concat('/datasets/@{encodeURIComponent(encodeURIComponent(''',parameters('sharepointSiteName'),'''))}/tables/@{encodeURIComponent(encodeURIComponent(''Permit''))}/items/@{encodeURIComponent(body(''Get_folder_metadata'')?[''ItemId''])}')]"
    }
  },
  "resources": [
    {
      "name": "[parameters('logicAppName')]",
      "type": "Microsoft.Logic/workflows",
      "location": "[parameters('location')]",
      "tags": {
        "Name": "[parameters('logicAppName')]",
        "Tier": "Compute",
        "Location": "[parameters('location')]",
        "Environment": "[parameters('Environment')]",
        "ServiceCode": "[parameters('ServiceCode')]",
        "ServiceName": "[parameters('ServiceName')]",
        "ServiceType": "[parameters('ServiceType')]",
        "CreatedDate": "[parameters('CreatedDate')]"
      },
      "apiVersion": "2016-06-01",
      "properties": {
        "definition": {
          "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "actions": {
            "List_records": {
              "type": "ApiConnection",
              "inputs": {
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['dynamicscrmonline']['connectionId']"
                  }
                },
                "method": "get",
                "path": "[variables('paths').listRecords]",
                "queries": {
                  "$filter": "createdon le @{formatDateTime(addDays(utcNow(),-180))} and statuscode eq 1",
                  "$orderby": "createdon desc",
                  "$top": 15000
                }
              },
              "runAfter": {
                "Initialize_variable_3": [
                  "Succeeded"
                ]
              },
              "runtimeConfiguration": {
                "paginationPolicy": {
                  "minimumItemCount": 50000
                }
              }
            },
            "For_each": {
              "type": "Foreach",
              "foreach": "@body('List_records')?['value']",
              "actions": {
                "Set_variable": {
                  "type": "SetVariable",
                  "inputs": {
                    "name": "OLD_PermitNumber",
                    "value": "@items('For_each')?['defra_applicationnumber']"
                  },
                  "runAfter": {}
                },
                "Set_variable_2": {
                  "type": "SetVariable",
                  "inputs": {
                    "name": "NEW_PermitNumber",
                    "value": "@{if(equals(indexOf(variables('OLD_PermitNumber'),'/'),-1),variables('OLD_PermitNumber'), substring(replace(variables('OLD_PermitNumber'),'/','_'),0,12))}"
                  },
                  "runAfter": {
                    "Set_variable": [
                      "Succeeded"
                    ]
                  }
                },
                "Get_folder_metadata": {
                  "type": "ApiConnection",
                  "inputs": {
                    "host": {
                      "connection": {
                        "name": "@parameters('$connections')['sharepointonline']['connectionId']"
                      }
                    },
                    "method": "get",
                    "path": "[variables('paths').getFolderMetadata]",
                    "queries": {
                      "id": "/Permit/@{variables('NEW_PermitNumber')}"
                    }
                  },
                  "runAfter": {
                    "Set_variable_2": [
                      "Succeeded"
                    ]
                  }
                },
                "Delete_item": {
                  "type": "ApiConnection",
                  "inputs": {
                    "host": {
                      "connection": {
                        "name": "@parameters('$connections')['sharepointonline']['connectionId']"
                      }
                    },
                    "method": "delete",
                    "path": "[variables('paths').deleteItem]"
                  },
                  "runAfter": {
                    "Get_folder_metadata": [
                      "Succeeded"
                    ]
                  }
                },
                "Set_variable_3": {
                  "type": "SetVariable",
                  "inputs": {
                    "name": "OLD_PermitNumber",
                    "value": "No folder found "
                  },
                  "runAfter": {
                    "Get_folder_metadata": [
                      "Failed",
                      "Skipped",
                      "TimedOut"
                    ]
                  }
                },
                "Set_variable_4": {
                  "type": "SetVariable",
                  "inputs": {
                    "name": "OLD_PermitNumber",
                    "value": "Skipped"
                  },
                  "runAfter": {
                    "Delete_item": [
                      "Failed",
                      "Skipped",
                      "TimedOut"
                    ]
                  }
                }
              },
              "runAfter": {
                "List_records": [
                  "Succeeded"
                ]
              }
            },
            "Initialize_variable": {
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "OLD_PermitNumber",
                    "type": "string",
                    "value": "''"
                  }
                ]
              },
              "runAfter": {}
            },
            "Initialize_variable_2": {
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "NEW_PermitNumber",
                    "type": "string"
                  }
                ]
              },
              "runAfter": {
                "Initialize_variable": [
                  "Succeeded"
                ]
              }
            },
            "Initialize_variable_3": {
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "REPLACMENT_STRING",
                    "type": "string",
                    "value": "'/'"
                  }
                ]
              },
              "runAfter": {
                "Initialize_variable_2": [
                  "Succeeded"
                ]
              }
            }
          },
          "parameters": {
            "$connections": {
              "defaultValue": {},
              "type": "Object"
            }
          },
          "triggers": {
            "Recurrence": {
              "type": "recurrence",
              "recurrence": {
                "frequency": "Day",
                "interval": 1
              }
            }
          },
          "contentVersion": "1.0.0.0",
          "outputs": {}
        },
        "parameters": {
          "$connections": {
            "value": {
              "dynamicscrmonline": {
                "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', parameters('location'), '/managedApis/', parameters('dynamicsConnectionName1'))]",
                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('dynamicsConnectionName1'))]",
                "connectionName": "[parameters('dynamicsConnectionName1')]"
              },
              "sharepointonline": {
                "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', parameters('location'), '/managedApis/', parameters('sharepointConnectionName1'))]",
                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('sharepointConnectionName1'))]",
                "connectionName": "[parameters('sharepointConnectionName1')]"
              }
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/connections', parameters('dynamicsConnectionName1'))]",
        "[resourceId('Microsoft.Web/connections', parameters('sharepointConnectionName1'))]"
      ]
    },
    {
      "type": "MICROSOFT.WEB/CONNECTIONS",
      "apiVersion": "2018-07-01-preview",
      "name": "[parameters('dynamicsConnectionName1')]",
      "location": "[parameters('location')]",
      "tags": {
        "Name": "[parameters('dynamicsConnectionName1')]",
        "Tier": "Other",
        "Location": "[parameters('location')]",
        "Environment": "[parameters('Environment')]",
        "ServiceCode": "[parameters('ServiceCode')]",
        "ServiceName": "WPT - Dynamics Api Connector",
        "ServiceType": "[parameters('ServiceType')]",
        "CreatedDate": "[parameters('CreatedDate')]"
      },
      "properties": {
        "api": {
          "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', parameters('location'), '/managedApis/', parameters('dynamicsConnectionName1'))]"
        },
        "displayName": "[parameters('dynamicsConnectionDisplayName1')]"
      }
    },
    {
      "type": "MICROSOFT.WEB/CONNECTIONS",
      "apiVersion": "2018-07-01-preview",
      "name": "[parameters('sharepointConnectionName1')]",
      "location": "[parameters('location')]",
      "tags": {
        "Name": "[parameters('sharepointConnectionName1')]",
        "Tier": "Other",
        "Location": "[parameters('location')]",
        "Environment": "[parameters('Environment')]",
        "ServiceCode": "[parameters('ServiceCode')]",
        "ServiceName": "WPT - Sharepoint API Connector",
        "ServiceType": "[parameters('ServiceType')]",
        "CreatedDate": "[parameters('CreatedDate')]"
      },
      "properties": {
        "api": {
          "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', parameters('location'), '/managedApis/', parameters('sharepointConnectionName1'))]"
        },
        "displayName": "[parameters('sharepointConnectionDisplayName1')]"
      }
    }
  ],
  "outputs": {}
}